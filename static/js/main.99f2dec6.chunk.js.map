{"version":3,"sources":["utils/currentTime.js","hooks/useKeyPress.js","components/Preloader.js","components/Popup.js","components/App.js","utils/api.js","hooks/useInterval.js","index.js"],"names":["currentTime","Date","getTime","useKeyPress","callback","React","useState","keyPressed","setKeyPressed","useEffect","keyDownHandler","key","length","keyUpHandler","window","addEventListener","removeEventListener","Preloader","className","Popup","accuracy","speed","handleStartOver","handleClose","escClose","e","document","onClick","App","text","setText","currentChar","setCurrentChar","mistakeChar","setMistakeChar","mistakeCharsCount","setMistakesCharsCount","startTime","setStartTime","charsCount","setCharsCount","isLoading","setIsLoading","isCompleteLessonPopupOpen","setIsCompleteLessonPopupOpen","typingSpeed","setTypingSpeed","isLessonDone","setIsLessonDone","charAt","getText","useCallback","resetProgress","fetch","then","res","json","catch","err","console","log","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","getTypingSpeed","toFixed","getTypingAccuracy","style","color","substring","onMouseDown","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99f2dec6.chunk.js","sourcesContent":["const currentTime = () => new Date().getTime();\n\nexport default currentTime;\n","import React from \"react\";\n\nconst useKeyPress = (callback) => {\n  const [keyPressed, setKeyPressed] = React.useState();\n\n  React.useEffect(() => {\n    const keyDownHandler = ({ key }) => {\n      if (keyPressed !== key && key.length === 1) {\n        setKeyPressed(key);\n        callback && callback(key);\n      }\n    };\n\n    const keyUpHandler = () => {\n      setKeyPressed(null);\n    };\n\n    window.addEventListener(\"keydown\", keyDownHandler);\n    window.addEventListener(\"keyup\", keyUpHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownHandler);\n      window.removeEventListener(\"keyup\", keyUpHandler);\n    };\n  });\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import \"./Preloader.css\";\r\n\r\nfunction Preloader() {\r\n  return (\r\n    <section className=\"preloader\">\r\n      <div className=\"preloader__text\">Loading, please wait...</div>\r\n      <i className=\"circle-preloader\"></i>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\nimport \"./Popup.css\";\n\nexport default function Popup({\n  accuracy,\n  speed,\n  handleStartOver,\n  handleClose,\n}) {\n  React.useEffect(() => {\n    const escClose = (e) => e.key === \"Escape\" && handleClose();\n    document.addEventListener(\"keydown\", escClose);\n    return () => document.removeEventListener(\"keydown\", escClose);\n  }, [handleClose]);\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup\">\n        <h1 className=\"popup__header\">Congratulatios!</h1>\n        <h2 className=\"popup__header\">Lesson completed</h2>\n        <h3 className=\"popup__header\">Your results:</h3>\n        <p>Accuracy {accuracy}%</p>\n        <p>Chars per minute {speed}</p>\n        <button\n          onClick={() => {\n            handleStartOver();\n            handleClose();\n          }}\n          className=\"popup__button_start-over\"\n        >\n          start over\n        </button>\n        <button onClick={handleClose} className=\"popup__button_close\">\n          X\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport textApi from \"../utils/api\";\nimport currentTime from \"../utils/currentTime\";\nimport useKeyPress from \"../hooks/useKeyPress\";\nimport useInterval from \"../hooks/useInterval\";\nimport Preloader from \"./Preloader\";\nimport \"./App.css\";\nimport Popup from \"./Popup\";\n\nfunction App() {\n  const [text, setText] = React.useState(\"\");\n  const [currentChar, setCurrentChar] = React.useState(null);\n  const [mistakeChar, setMistakeChar] = React.useState(false);\n  const [mistakeCharsCount, setMistakesCharsCount] = React.useState(0);\n  const [startTime, setStartTime] = React.useState(null);\n  const [charsCount, setCharsCount] = React.useState(0);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isCompleteLessonPopupOpen, setIsCompleteLessonPopupOpen] =\n    React.useState(false);\n  const [typingSpeed, setTypingSpeed] = React.useState(0);\n  const [isLessonDone, setIsLessonDone] = React.useState(false);\n\n  useKeyPress((key) => {\n    if (!startTime) {\n      setStartTime(currentTime());\n    }\n\n    if (currentChar === text.length - 1) {\n      setIsLessonDone(true);\n      setIsCompleteLessonPopupOpen(true);\n      return;\n    }\n    if (key === text.charAt(currentChar)) {\n      setMistakeChar(false);\n      setCurrentChar(currentChar + 1);\n      setCharsCount(charsCount + 1);\n      return;\n    }\n    if (!mistakeChar) {\n      // prevent count mistakeCharsCount in case of pressing wrong key many times in a row\n      setMistakesCharsCount(mistakeCharsCount + 1);\n      setMistakeChar(true);\n      return;\n    }\n  });\n\n  const getText = React.useCallback(() => {\n    resetProgress();\n    setIsLoading(true);\n    textApi()\n      .then((res) => {\n        setText(res);\n        setCurrentChar(0);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  React.useEffect(() => {\n    getText();\n  }, [getText]);\n\n  useInterval(() => {\n    !isLessonDone && setTypingSpeed(getTypingSpeed());\n  }, 1000);\n\n  const getTypingSpeed = () => {\n    if (charsCount < 2) return 0;\n    else return (charsCount / ((currentTime() - startTime) / 60000)).toFixed(0);\n  };\n\n  const getTypingAccuracy = () => {\n    // condition is to prevent NaN while loading\n    return isLoading\n      ? \"100.00\"\n      : (100 - (mistakeCharsCount / text.length) * 100).toFixed(2);\n  };\n\n  const resetProgress = () => {\n    setCurrentChar(0);\n    setMistakeChar(false);\n    setMistakesCharsCount(0);\n    setStartTime(null);\n    setCharsCount(0);\n  };\n\n  const closeCompleteLessonPopup = () => setIsCompleteLessonPopupOpen(false);\n\n  return (\n    <>\n      {isCompleteLessonPopupOpen ? (\n        <Popup\n          accuracy={getTypingAccuracy()}\n          speed={typingSpeed}\n          handleStartOver={getText}\n          handleClose={closeCompleteLessonPopup}\n        />\n      ) : (\n        \"\"\n      )}\n      <div className=\"wrapper\">\n        <section className=\"text\">\n          {isLoading ? (\n            <Preloader />\n          ) : (\n            <>\n              <span style={{ color: \"green\" }}>\n                {text.substring(0, currentChar)}\n              </span>\n              {mistakeChar ? (\n                <span className=\"text__cursor_mistake\">\n                  {text.charAt(currentChar)}\n                </span>\n              ) : (\n                <span className=\"text__cursor\">{text.charAt(currentChar)}</span>\n              )}\n              <span>{text.substring(currentChar + 1, text.length)}</span>\n            </>\n          )}\n        </section>\n        <section className=\"info-and-controlls\">\n          <div className=\"statistic\">\n            <p className=\"statistic-item\">\n              Chars per minute\n              <span className=\"statistic-item__higlighted\"> {typingSpeed}</span>\n            </p>\n            <p className=\"statistic-item\">\n              Accuracy\n              <span className=\"statistic-item__higlighted\">\n                {\" \"}\n                {getTypingAccuracy()}%\n              </span>\n            </p>\n          </div>\n          <div className=\"controlls\">\n            <button onMouseDown={resetProgress} className=\"controlls__button\">\n              start over\n            </button>\n            <button onMouseDown={getText} className=\"controlls__button\">\n              get another text\n            </button>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\nexport default App;\n","export default function textApi() {\n  return fetch(\"https://baconipsum.com/api/?type=meat-and-filler&sentences=10\")\n    .then((res) => res.json())\n    .then((res) => res[0]);\n}\n","import React from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = React.useRef();\n\n  // Remember the latest function.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}